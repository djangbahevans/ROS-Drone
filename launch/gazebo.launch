<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />
  <!-- <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" /> -->

  <!-- Load URDF to parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find drone_description)/urdf/drone_base.xacro" />

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -model drone_description -param robot_description" output="screen" />
  <!-- <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" /> -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find drone_description)/config/control.yaml" command="load" />

  <!-- Load the controllers -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/" args="joint_motor_controller camera_joint_position_controller" /> -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/" args="joint_motor_controller" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
    <!-- <remap from="/joint_states" to="/mydrone/joint_states" /> -->
  <!-- </node> -->
</launch>
